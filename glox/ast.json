{
	"Expr": {
		"Assignment": [
			"Name lexer.Token",
			"Value Expr"
		],
		"Binary": [
			"Left Expr",
			"Operator lexer.Token",
			"Right Expr"
		],
		"Logical": [
			"Left Expr",
			"Operator lexer.Token",
			"Right Expr"
		],
		"Unary": [
			"Operator lexer.Token",
			"Right Expr"
		],
		"Grouping": ["Expression Expr"],
		"Literal": ["Value any"],
		"Variable": ["Name lexer.Token"]
	},
	"Stmt": {
		"Block": ["Statements []Stmt"],
		"Expression": ["Expression Expr"],
		"If": [
			"Condition Expr",
			"ThenBranch Stmt",
			"ElseBranch Stmt"
		],
		"Print": ["Expression Expr"],
		"Var": [
			"Name lexer.Token",
			"Initializer Expr"
		]
	}
}
