// Code generated by "stringer -type TokenType ./lexer/"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NOT_INITIALIZED-0]
	_ = x[LEFT_PAREN-1]
	_ = x[RIGHT_PAREN-2]
	_ = x[LEFT_BRACE-3]
	_ = x[RIGHT_BRACE-4]
	_ = x[COMMA-5]
	_ = x[DOT-6]
	_ = x[MINUS-7]
	_ = x[PLUS-8]
	_ = x[SEMICOLON-9]
	_ = x[SLASH-10]
	_ = x[STAR-11]
	_ = x[BANG-12]
	_ = x[BANG_EQUAL-13]
	_ = x[EQUAL-14]
	_ = x[DOUBLE_EQUAL-15]
	_ = x[GT-16]
	_ = x[GTE-17]
	_ = x[LT-18]
	_ = x[LTE-19]
	_ = x[IDENT-20]
	_ = x[STRING-21]
	_ = x[NUMBER-22]
	_ = x[AND-23]
	_ = x[CLASS-24]
	_ = x[ELSE-25]
	_ = x[FALSE-26]
	_ = x[FUN-27]
	_ = x[FOR-28]
	_ = x[IF-29]
	_ = x[NIL-30]
	_ = x[OR-31]
	_ = x[PRINT-32]
	_ = x[RETURN-33]
	_ = x[SUPER-34]
	_ = x[THIS-35]
	_ = x[TRUE-36]
	_ = x[VAR-37]
	_ = x[WHILE-38]
	_ = x[EOF-39]
}

const _TokenType_name = "NOT_INITIALIZEDLEFT_PARENRIGHT_PARENLEFT_BRACERIGHT_BRACECOMMADOTMINUSPLUSSEMICOLONSLASHSTARBANGBANG_EQUALEQUALDOUBLE_EQUALGTGTELTLTEIDENTSTRINGNUMBERANDCLASSELSEFALSEFUNFORIFNILORPRINTRETURNSUPERTHISTRUEVARWHILEEOF"

var _TokenType_index = [...]uint8{0, 15, 25, 36, 46, 57, 62, 65, 70, 74, 83, 88, 92, 96, 106, 111, 123, 125, 128, 130, 133, 138, 144, 150, 153, 158, 162, 167, 170, 173, 175, 178, 180, 185, 191, 196, 200, 204, 207, 212, 215}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
